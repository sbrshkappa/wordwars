{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbrsh/Code/wordwars/frontend/src/app/api/validate-word/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport axios from 'axios';\n\nconst DICTIONARY_API_URL = 'https://api.dictionaryapi.dev/api/v2/entries/en';\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const word = searchParams.get('word');\n  if (!word) {\n    return NextResponse.json({ valid: false, error: 'No word provided' }, { status: 400 });\n  }\n\n  try {\n    const response = await axios.get(`${DICTIONARY_API_URL}/${word.toLowerCase()}`);\n    if (response.status === 200 && response.data.length > 0) {\n      return NextResponse.json({ valid: true });\n    }\n    return NextResponse.json({ valid: false });\n  } catch (error: any) {\n    if (axios.isAxiosError(error) && error.response?.status === 404) {\n      return NextResponse.json({ valid: false });\n    }\n    // For other errors, allow the word (fail open)\n    return NextResponse.json({ valid: true, warning: 'Dictionary API error, allowing word.' });\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,qBAAqB;AAEpB,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,OAAO,aAAa,GAAG,CAAC;IAC9B,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAO,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;IACtF;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC,EAAE,KAAK,WAAW,IAAI;QAC9E,IAAI,SAAS,MAAM,KAAK,OAAO,SAAS,IAAI,CAAC,MAAM,GAAG,GAAG;YACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAK;QACzC;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAM;IAC1C,EAAE,OAAO,OAAY;QACnB,IAAI,uIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,UAAU,MAAM,QAAQ,EAAE,WAAW,KAAK;YAC/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAM;QAC1C;QACA,+CAA+C;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAM,SAAS;QAAuC;IAC1F;AACF","debugId":null}}]
}